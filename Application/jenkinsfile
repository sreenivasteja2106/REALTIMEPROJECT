 
pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                echo 'SCM Git'
                git branch: 'main', url: 'https://github.com/sreenivasteja2106/REALTIMEPROJECT.git'
            }
        }

        stage('Building Jar') {
            steps {
                echo 'Maven build'
                sh 'cd Application && mvn clean package'
            }
        }

        stage('Sonar Scan') {
            steps {
                echo 'Scanning project'
                sh 'ls -ltr'
                sh '''
                    cd Application && mvn sonar:sonar \
                    -Dsonar.host.url=http://54.198.87.11:9000 \
                    -Dsonar.login=squ_2529d3a450c6e4c6e914266c422c6b401ca06376
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image'
                    sh 'cd Application && docker build -t tejathulluru210600/k8s:${BUILD_NUMBER} .'
                }
            }
        }

        stage('Docker Image Scan') {
            steps {
                sh "trivy image tejathulluru210600/k8s:${BUILD_NUMBER}"
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                        sh 'docker login -u tejathulluru210600 -p ${dockerhub}'
                    }
                    sh 'docker push tejathulluru210600/k8s:${BUILD_NUMBER}'
                }
            }
        }

        stage('Update Kubernetes Deployment Manifest File') {
            environment {
                GIT_REPO_NAME = "REALTIMEPROJECT"
                GIT_USER_NAME = "sreenivasteja2106"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "sreenivasteja2106@gmail.com"
                        git config user.name "sreenivasteja2106"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/k8s:.*/k8s:${BUILD_NUMBER}/g" Ansible/k8s_deployment.yaml
                        git add .
                        git commit -m "Update deployment image tag to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }

        stage('K8s Deployment using Ansible') {
            steps {
                script {
                    ansiblePlaybook credentialsId: 'ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/', playbook: 'Ansible/ansible_k8s_deploy_playbook.yaml'
                }
            }
        }
    }
}
